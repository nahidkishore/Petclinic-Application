pipeline {
    agent any
    
     tools{
        jdk 'jdk17'
        maven 'maven3'
    }
    
     environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages {
        
        stage("Clean Workspace"){
            steps{
                cleanWs()
            }
        }


        stage("Git Checkout"){
            steps{
               git branch: 'main', url: 'https://github.com/nahidkishore/Petclinic-Application.git'
            }
        }
        
        stage("Compile"){
            steps{
                sh "mvn clean compile -DskipTests=true"
            }
        }
          stage("Test Cases"){
            steps{
                sh "mvn test -DskipTests=true"
            }
        }
        
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Petclinic \
                    -Dsonar.java.binaries=. \
                    -Dsonar.projectKey=Petclinic '''
                }
            }
        }
        
        stage("SonarQube Quality Gate"){
       
             steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
         }

     }
     
    
        
         stage("Build"){
            steps{
                sh "mvn clean install -DskipTests=true"
            }
        } 
        stage('Docker Build Application'){
            steps{
                sh "docker build . -t petclinic-application"

                
            }
        }
         stage("Docker image Push to Docker Hub"){
               steps{
                   
                echo 'login into docker hub and pushing image....'
                withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]){
                     
                     sh "docker tag petclinic-application ${env.dockerHubUser}/petclinic-application:latest"
                     sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
                     sh "docker push ${env.dockerHubUser}/petclinic-application:latest"


               }
           }
         }
      
    }
}
#after workspace change your job name 
ubuntu ALL=(ALL) NOPASSWD: /bin/cp /var/lib/jenkins/workspace/Devops-CICD-Real-Time-Projects/target/petclinic.war /opt/apache-tomcat-9.0.65/webapps/ 
jenkins ALL=(ALL) NOPASSWD: /bin/cp /var/lib/jenkins/workspace/Devops-CICD-Real-Time-Projects/target/petclinic.war /opt/apache-tomcat-9.0.65/webapps/
